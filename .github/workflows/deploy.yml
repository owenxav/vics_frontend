    - name: Deploy Next.js Application to AWS Lightsail
      env:
        LIGHTSAIL_IP: "13.43.41.67"  # Replace with your Lightsail instance's public IP
      run: |
        echo "Deploying Next.js application to AWS Lightsail..."

        # Ensure the target directory exists on the server
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/lightsail_key ubuntu@$LIGHTSAIL_IP "sudo mkdir -p /var/www/html && sudo chown -R ubuntu:ubuntu /var/www/html"

        # Sync necessary files to the Lightsail instance
        rsync -avz --delete \
          --exclude='.git' \
          --exclude='node_modules' \
          --exclude='.next/cache' \
          -e "ssh -o StrictHostKeyChecking=no -i ~/.ssh/lightsail_key" \
          ./ ubuntu@$LIGHTSAIL_IP:/var/www/html

        # SSH into the instance to configure the application
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/lightsail_key ubuntu@$LIGHTSAIL_IP "
          echo 'Configuring Next.js application on Lightsail...'

          # Update package list and install Node.js and npm if missing
          if ! command -v node &> /dev/null; then
            echo 'Installing Node.js...'
            curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
            sudo apt-get install -y nodejs
          fi

          # Ensure npm is installed
          if ! command -v npm &> /dev/null; then
            echo 'npm is missing, installing...'
            sudo apt install -y npm
          fi

          # Navigate to the deployment directory
          cd /var/www/html

          # Ensure dependencies are installed
          npm ci

          # Run Next.js build to generate the '.next' directory
          npm run build

          # Install PM2 globally if not installed
          if ! command -v pm2 &> /dev/null; then
            echo 'Installing PM2...'
            sudo npm install pm2@latest -g
          fi

          # Start or restart the application using PM2
          pm2 delete nextjs-app || true
          pm2 start npm --name 'nextjs-app' -- start -- -p 4000

          # Save PM2 process for auto-start
          pm2 save

          # Reload Nginx if being used as a reverse proxy
          if systemctl is-active --quiet nginx; then
            sudo systemctl reload nginx
          fi
        "
