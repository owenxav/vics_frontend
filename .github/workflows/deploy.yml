name: CI/CD Pipeline for Next.js with AWS Lightsail

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Verify build script
        run: |
          if ! grep -q '"build":' package.json; then
            echo "ERROR: No build script found in package.json!" >&2
            exit 1
          fi

      - name: Build Next.js Application
        run: npm run build

      - name: Run tests
        run: |
          echo "Running tests..."
          npm test || echo "No tests defined or some tests failed."

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Add SSH Key for Lightsail
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/lightsail_key
          chmod 600 ~/.ssh/lightsail_key

      - name: Deploy Next.js Application to AWS Lightsail
        env:
          LIGHTSAIL_IP: "13.43.41.67"  # Replace with your Lightsail instance's public IP
        run: |
          echo "Deploying Next.js application to AWS Lightsail..."

          # Ensure the target directory exists and set proper ownership
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/lightsail_key ubuntu@$LIGHTSAIL_IP "
            sudo mkdir -p /var/www/html
            sudo chown -R ubuntu:ubuntu /var/www/html
          "

          # Sync necessary files to the Lightsail instance
          rsync -avz --delete \
            --exclude='.git' \
            --exclude='node_modules' \
            --exclude='.next/cache' \
            -e "ssh -o StrictHostKeyChecking=no -i ~/.ssh/lightsail_key" \
            ./ ubuntu@$LIGHTSAIL_IP:/var/www/html

          # SSH into the instance to configure the application
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/lightsail_key ubuntu@$LIGHTSAIL_IP "
            echo 'Configuring Next.js application on Lightsail...'

            # Update system and install dependencies if missing
            sudo apt update

            # Install Node.js and npm if missing
            if ! command -v node &> /dev/null; then
              echo 'Installing Node.js...'
              curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
              sudo apt-get install -y nodejs
            fi

            # Ensure npm is installed
            if ! command -v npm &> /dev/null; then
              echo 'npm is missing, installing...'
              sudo apt install -y npm
            fi

            # Navigate to the deployment directory
            cd /var/www/html

            # Ensure dependencies are installed
            npm ci

            # Run Next.js build to generate the '.next' directory
            npm run build

            # Install PM2 globally if not installed
            if ! command -v pm2 &> /dev/null; then
              echo 'Installing PM2...'
              sudo npm install pm2@latest -g
            fi

            # Start or restart the application using PM2
            pm2 delete nextjs-app || true
            pm2 start npm --name 'nextjs-app' -- start -- -p 4000

            # Save PM2 process for auto-start
            pm2 save

            # Reload Nginx if being used as a reverse proxy
            if systemctl is-active --quiet nginx; then
              sudo systemctl reload nginx
            fi
          "

      - name: Cleanup
        run: |
          echo "Cleaning up temporary files..."
          rm -f ~/.ssh/lightsail_key
